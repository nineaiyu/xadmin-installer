name: Create Release And Upload assets

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          TAG=$(basename ${GITHUB_REF})
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "VERSION=${TAG/v/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-config.yml
          version: ${{ steps.get_version.outputs.TAG }}
          tag: ${{ steps.get_version.outputs.TAG }}

      - name: Create Upload Assets
        run: |
          mkdir -p build xadmin-installer-${{ steps.get_version.outputs.TAG }}
          git archive --format tar HEAD | tar x -C xadmin-installer-${{ steps.get_version.outputs.TAG }}
          sed -i "s@VERSION=.*@VERSION=${{ steps.get_version.outputs.VERSION }}@g"  xadmin-installer-${{ steps.get_version.outputs.TAG }}/static.env
          tar -czf build/xadmin-installer-${{ steps.get_version.outputs.TAG }}.tar.gz xadmin-installer-${{ steps.get_version.outputs.TAG }}
          cd build
          md5sum xadmin-installer-${{ steps.get_version.outputs.TAG }}.tar.gz > xadmin-installer-${{ steps.get_version.outputs.TAG }}.tar.gz.md5

      - name: Release Upload Assets
        run: |
          gh release upload ${{ steps.get_version.outputs.TAG }} build/* -R $GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}